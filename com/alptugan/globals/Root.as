/*************************************************************************************************** * Website      : www.alptugan.com * Blog         : blog.alptugan.com * Email        : info@alptugan.com * * Class Name   : Root.as * Release Date : Aug 14, 2011 * * Feel free to use this code in any way you want other than selling it. * Thanks. -Alp Tugan ***************************************************************************************************/package com.alptugan.globals{	import com.alptugan.utils.debug.Stats;		import flash.display.DisplayObject;	import flash.display.Stage;	import flash.display.StageAlign;	import flash.display.StageScaleMode;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.system.Capabilities;		import org.casalib.display.CasaSprite;
	public class Root extends CasaSprite	{		/**		 * stage : Globals stage variable		 * root  : Globals root (top layer) object 		 */		public static var		stage : Stage,		root  : DisplayObject;				public static var						W:int,					H:int,					monitor:Stats;				/**		 * profiler : enabled with right-click on stage in order to see performance monitor hide/show		 * rEvt     : TopLevel Class Events 		 */				private var _loaderInfo  : Boolean;						public function Root()		{			/*this._loaderInfo = _loaderInfo;						this.addEventListener(Event.ADDED_TO_STAGE,setupRoot );*/						if (this.stage){				setupRoot();			}else{				addEventListener(Event.ADDED_TO_STAGE, setupRoot);			}					}				/**		 * initialize System Performance Monitor		 * 		 */		public function initDebugView(_x:int = 0, _y:int = 0):void		{			monitor = new Stats(_x,_y); 			addChild(monitor);		}						public function initStage(frameRate:int = 30, quality:String = "HIGH"):void		{			stage.align = StageAlign.TOP_LEFT;			stage.scaleMode = StageScaleMode.NO_SCALE;			stage.quality = quality;			stage.frameRate = frameRate;		}				public function initMainClass(rootClass:Class):void		{			var rootObject:DisplayObject = new rootClass();			if (rootObject == null) throw new Error("Invalid root class: " + rootClass);			addChildAt(rootObject,0);		}				private function setupRoot(event : Event = null ):void		{			this.removeEventListener(Event.ADDED_TO_STAGE,setupRoot );							Root.stage = this.stage;			Root.root  = this;						W = Root.stage.stageWidth; H = Root.stage.stageHeight;					Root.stage.addEventListener(Event.RESIZE, on_Resize);			/*			//Adjust framerate and customize right-click menu			Config.setup( this );			*/			//trace numereous loaderinfo parameters if needed for debug purposes			(_loaderInfo) ? loaderInfo.addEventListener(Event.INIT, onLoaderInfo_INIT) : void; 		}				public function initFullScreen():void {			if (stage.displayState== "normal") {				stage.displayState="fullScreen";				stage.scaleMode = StageScaleMode.NO_SCALE;			} else {				stage.displayState="normal";			}		}				public function alignRight(obj:Object,marginX:int = 0, marginY:int = 0):void		{			obj.x = marginX + (stage.stageWidth - obj.width);			obj.y = marginY;		}				public function alignCenterLeft(obj:Object,marginX:int = 0, marginY:int = 0):void		{			obj.x = marginX ;			obj.y = marginY + (stage.stageHeight - obj.height) >> 1;		}				public function alignCenterRight(obj:Object,marginX:int = 0, marginY:int = 0):void		{			obj.x = marginX + (stage.stageWidth - obj.width);			obj.y = marginY + (stage.stageHeight - obj.height) >> 1;		}						public function alignCenter(obj:Object,marginX:int = 0, marginY:int = 0):void		{			obj.x = marginX + (stage.stageWidth - obj.width) >> 1;			obj.y = marginY + (stage.stageHeight - obj.height) >> 1;		}				public function alignBottomRight(obj:Object,marginX:int = 30, marginY:int = 30):void		{			obj.x = stage.stageWidth - obj.width - marginX;			obj.y = stage.stageHeight - obj.height - marginY;		}				public function onLoaderInfo_INIT(event:Event):void		{			loaderInfo.removeEventListener(Event.INIT, onLoaderInfo_INIT); 						trace(Capabilities.screenResolutionX);						trace("loaderInfo.actionScriptVersion: "+loaderInfo.actionScriptVersion);			trace("loaderInfo.applicationDomain: "+loaderInfo.applicationDomain);			//trace("loaderInfo.bytes: "+loaderInfo.bytes);			trace("loaderInfo.bytesLoaded: "+loaderInfo.bytesLoaded);			trace("loaderInfo.bytesTotal: "+loaderInfo.bytesTotal);			trace("loaderInfo.childAllowsParent: "+loaderInfo.childAllowsParent);			//trace("loaderInfo.constructor: "+loaderInfo.constructor);			trace("loaderInfo.content: "+loaderInfo.content);			trace("loaderInfo.contentType: "+loaderInfo.contentType);			trace("loaderInfo.frameRate: "+loaderInfo.frameRate);			trace("loaderInfo.height: "+loaderInfo.height);			trace("loaderInfo.loader: "+loaderInfo.loader);			trace("loaderInfo.loaderURL: "+loaderInfo.loaderURL);			trace("loaderInfo.parameters: "+loaderInfo.parameters);			trace("loaderInfo.parentAllowsChild: "+loaderInfo.parentAllowsChild);			//trace("loaderInfo.prototype: "+loaderInfo.prototype);			trace("loaderInfo.sameDomain: "+loaderInfo.sameDomain);			trace("loaderInfo.sharedEvents: "+loaderInfo.sharedEvents);			trace("loaderInfo.swfVersion: "+loaderInfo.swfVersion);			trace("loaderInfo.url: "+loaderInfo.url);			trace("loaderInfo.width: "+loaderInfo.width);		}				//======================================================================================================================		// PUBLIC METHODS		//======================================================================================================================		public function initResizeHandler():void		{					}				public function initMouseLeave():void		{			Root.stage.addEventListener(Event.MOUSE_LEAVE, on_MouseLeave);		}				public function initMouseWheel():void		{			Root.stage.addEventListener(MouseEvent.MOUSE_WHEEL, on_MouseWheel);		}				public function initMouseUp():void		{			Root.stage.addEventListener(MouseEvent.MOUSE_UP, on_MouseUp);		}				protected function on_MouseUp(e:MouseEvent):void{}		protected function on_Resize(e:Event):void{ W = Root.stage.stageWidth; H = Root.stage.stageHeight; }		protected function on_MouseLeave(e:Event):void{}		protected function on_MouseWheel(e:MouseEvent):void{}						public function disposeResizeHandler():void		{			Root.stage.removeEventListener(Event.RESIZE, on_Resize);		}				public function disposeMouseLeave():void		{			Root.stage.removeEventListener(Event.MOUSE_LEAVE, on_MouseLeave);		}				public function disposeMouseWheel():void		{			Root.stage.removeEventListener(MouseEvent.MOUSE_WHEEL, on_MouseWheel);		}				public function disposeMouseUp():void		{			Root.stage.removeEventListener(MouseEvent.MOUSE_UP, on_MouseUp);		}	}}